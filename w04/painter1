package painter1;

import java.awt.BorderLayout;

import javax.swing.JFrame;

public class PainterFrame extends JFrame{
	
	private Drawpanel drawpanel;


	public PainterFrame() {
		super();
		drawpanel = new Drawpanel();
		add(drawpanel, BorderLayout.CENTER);
		
	}


}

------------------------------------------------------------
package painter1;

import java.awt.Color;
import java.awt.Graphics;

public abstract class Shape {
	protected int x1,y1,x2,y2;
	protected boolean filled;
	protected Color color;
	
	public Shape(int x1,int y1,int x2,int y2,boolean filled,Color color) {
		this.x1 = x1;
		this.y1 = y1;
		this.x2 = x2;
		this.y2 = y2;
		this.filled = filled;
		this.color = color;
		
	}
	public abstract void draw(Graphics g);

}

-------------------------------------------------------------
package painter1;

public class ShapeTest {

	public static void main(String[] args) {

		PainterFrame pframe = new PainterFrame();
		pframe.setSize(900, 800);
		pframe.setVisible(true);

	}

}

----------------------------------------------------------
package painter1;

import java.awt.Color;
import java.awt.Graphics;
import java.util.Random;

import javax.swing.JPanel;

public class Drawpanel extends JPanel{
	
	private Shape shapes[];
	final int Max = 100;
	private int sct;
	private int x1,y1,x2,y2;
	private boolean filled;
	private Color color;
	
	
	Random rand; 
	
	public Drawpanel() {
		super();
		shapes = new Shape[Max];
		rand = new Random();
		randgen(5);
		
	}

	public void randgen(int n) {
		for(int i=0;i<n;i++)
		{
			x1 = rand.nextInt(600);
			y1 = rand.nextInt(600);
			x2 = rand.nextInt(600);
			y2 = rand.nextInt(600);
			filled = rand.nextBoolean();
			color = new Color(rand.nextInt(256),rand.nextInt(256),rand.nextInt(256));
			shapes[sct++] = new Rect(x1,y1,x2,y2,filled,color);
			
		}
	}

	public void paintComponent(Graphics g) {
		super.paintComponent(g);
		for(int i=0;i<sct;i++) {
			shapes[i].draw(g);
			
		}
	}


}

-----------------------------------------------------
package painter1;

import java.awt.Color;

import java.awt.Graphics;

public class Rect extends Shape {
	public Rect(int x1,int y1,int x2,int y2,boolean filled,Color color) {
		super(x1,y1,x2,y2,filled,color);
		
	}

	@Override
	public void draw(Graphics g) {
		// TODO Auto-generated method stub
		g.setColor(color);
		if(filled) {
			g.fillRect(Math.min(x1, x2),Math.min(y1, y2),Math.abs(x1-x2),Math.abs(y1-y2));
		}else {
				g.drawRect(Math.min(x1, x2),Math.min(y1, y2),Math.abs(x1-x2),Math.abs(y1-y2));
			}
		}
	}


